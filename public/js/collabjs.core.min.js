/*!
* collab.js v0.5.0-alpha
* Copyright (c) 2013-2014 Denis Vuyka
* License: MIT
* http://www.opensource.org/licenses/mit-license.php
*/
var collabjs=collabjs||{config:{allowUserRegistration:!0},currentUser:{pictureUrl:null}};collabjs.countries={AF:"Afghanistan",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"Andorra",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia and Herzegovina",BW:"Botswana",BR:"Brazil",VG:"British Virgin Islands",BN:"Brunei",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",CI:"Côte d'Ivoire",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CO:"Colombia",KM:"Comoros",CG:"Congo",CR:"Costa Rica",HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",CD:"Democratic Republic of the Congo",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",TP:"East Timor",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FO:"Faeroe Islands",FK:"Falkland Islands",FJ:"Fiji",FI:"Finland",MK:"Former Yugoslav Republic of Macedonia",FR:"France",GA:"Gabon",GE:"Georgia",DE:"Germany",GH:"Ghana",GR:"Greece",GL:"Greenland",GD:"Grenada",GU:"Guam",GT:"Guatemala",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macau",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MR:"Mauritania",MU:"Mauritius",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",ME:"Montenegro",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NF:"Norfolk Island",KP:"North Korea",MP:"Northern Marianas",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn Islands",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RO:"Romania",RU:"Russia",RW:"Rwanda",ST:"São Tomé and Príncipe",SH:"Saint Helena",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",KR:"South Korea",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syria",TW:"Taiwan",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",BS:"The Bahamas",GM:"The Gambia",TG:"Togo",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",VI:"US Virgin Islands",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VA:"Vatican City",VE:"Venezuela",VN:"Vietnam",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"},function($){"use strict";$.fn.countdown=function(config){function updateUi(sender){var available=options.limit-$(sender).val().length,counter=options.prefix+available+options.suffix;counter>=0?options.plus(counter):options.minus(counter)}var options=$.extend($.fn.countdown.defaults,config);return updateUi($(this)),this.each(function(){$(this).bind("keyup change",function(){return $(this).val().length?void updateUi($(this)):void options.init(options.limit)})})},$.fn.countdown.defaults={limit:160,init:function(){},plus:function(){},minus:function(){},prefix:"",suffix:""}}(jQuery),String.prototype.parseUrls=function(){"use strict";return this.replace(/[A-Za-z]+:\/\/[A-Za-z0-9-_]+\.[A-Za-z0-9-_:%&~\?\/.=]+/g,function(url){return url.link(url)})},String.prototype.parseHashTags=function(){"use strict";return this.replace(/[#]+[A-Za-z0-9-_]+/g,function(t){var tag=t.replace("#","%23");return t.link("/#/search?q="+tag+"&src=hash")})},String.prototype.parseAccountTags=function(){"use strict";return this.replace(/[@]+[A-Za-z0-9-_]+/g,function(u){var username=u.replace("@","");return"<a href='/#/people/"+username+"'>"+u+"</a>"})},String.prototype.getHashTags=function(){"use strict";var result=this.match(/[#]+[A-Za-z0-9-_]+/g);return result?result:[]},String.prototype.twitterize=function(){"use strict";return this.parseUrls().parseAccountTags().parseHashTags()},angular.module("collabjs",["ngRoute","ngSanitize","collabjs.services","collabjs.filters","collabjs.directives","collabjs.controllers","angularMoment","infinite-scroll","ui.select2","chieffancypants.loadingBar","ngAnimate"]).config(["$routeProvider",function($routeProvider){"use strict";var auth=function($q,$timeout,$http,$location,authService){var deferred=$q.defer();return $http.get("/api/auth/check").success(function(user){"0"!==user?(authService.setCurrentUser(user),$timeout(deferred.resolve,0)):(authService.setCurrentUser(null),$timeout(function(){deferred.reject(null)},0),$location.url("/login"))}),deferred.promise},isAdmin=function($q,$timeout,$http,$location,authService){var d=$q.defer();return $http.get("/api/auth/check").success(function(user){"0"!==user?(authService.setCurrentUser(user),user.roles&&user.roles.indexOf("administrator")>-1?$timeout(function(){d.resolve(!0)},0):$timeout(function(){d.resolve(!1)},0)):(authService.setCurrentUser(null),$timeout(function(){d.reject(null)},0),$location.url("/login"))}),d.promise},defaultRedirect=function($q,$http,$location,$timeout,authService){var deferred=$q.defer(),user=authService.getCurrentUser();return user?($location.path("/news").replace(),$timeout(deferred.resolve,0)):$http.get("/api/auth/check").success(function(user){"0"!==user?(authService.setCurrentUser(user),$timeout(deferred.resolve,0),$location.path("/news").replace()):(authService.setCurrentUser(null),$timeout(deferred.resolve,0),"/register"!==$location.path()||collabjs.config.allowUserRegistration||$location.path("/").replace())}),deferred.promise};collabjs.auth=auth,collabjs.defaultRedirect=defaultRedirect,collabjs.isAdmin=isAdmin,$routeProvider.when("/",{templateUrl:"/templates/index.html",resolve:{isLoggedIn:defaultRedirect},title:"Welcome"}).when("/login",{templateUrl:"/templates/login.html",controller:"LoginController",resolve:{isLoggedIn:defaultRedirect},title:"Sign In"}).when("/register",{templateUrl:"/templates/register.html",controller:"RegistrationController",resolve:{isLoggedIn:defaultRedirect},title:"Register"}).when("/news",{templateUrl:"/templates/news.html",controller:"NewsController",resolve:{isLoggedIn:auth},title:"News"}).when("/people",{templateUrl:"/templates/people.html",controller:"PeopleListController",resolve:{isLoggedIn:auth},title:"People"}).when("/people/:account",{templateUrl:"/templates/wall.html",controller:"WallController",resolve:{isLoggedIn:auth},title:"Account"}).when("/people/:account/following",{templateUrl:"/templates/following.html",controller:"FollowingController",resolve:{isLoggedIn:auth},title:"Following"}).when("/people/:account/followers",{templateUrl:"/templates/followers.html",controller:"FollowersController",resolve:{isLoggedIn:auth},title:"Followers"}).when("/mentions",{templateUrl:"/templates/mentions.html",controller:"MentionsController",resolve:{isLoggedIn:auth},title:"Mentions"}).when("/posts/:postId",{templateUrl:"/templates/post.html",controller:"PostController",resolve:{isLoggedIn:auth},title:"Post"}).when("/account",{templateUrl:"/templates/account-profile.html",controller:"AccountController",resolve:{isLoggedIn:auth},title:"Profile"}).when("/account/password",{templateUrl:"/templates/account-password.html",controller:"PasswordController",resolve:{isLoggedIn:auth},title:"Change Password"}).when("/search",{templateUrl:"/templates/search-posts.html",controller:"SearchController",resolve:{isLoggedIn:auth},title:"Search"}).when("/help/:article?",{templateUrl:"/templates/help.html",controller:"HelpController",title:"Help"}).otherwise({redirectTo:"/news"})}]).run(function($rootScope){"use strict";$rootScope.$on("$routeChangeSuccess",function(event,currentRoute){$rootScope.title=currentRoute.title})}),angular.module("collabjs.services",["ngResource"]),angular.module("collabjs.directives",[]),angular.module("collabjs.filters",[]),angular.module("collabjs.controllers",[]),angular.module("collabjs.services").service("accountService",["$http","$q",function($http,$q){"use strict";return{createAccount:function(account,name,email,password){var d=$q.defer(),data={account:account,name:name,email:email,password:password};return $http.post("/api/account/register",data).success(function(res){d.resolve(res)}).error(function(res){d.reject(res)}),d.promise},getAccount:function(){var d=$q.defer();return $http.get("/api/account").success(function(data){d.resolve(data)}),d.promise},updateAccount:function(data){var d=$q.defer();return $http.post("/api/account",data).success(function(){d.resolve(!0)}),d.promise},changePassword:function(data){var d=$q.defer();return $http.post("/api/account/password",data).success(function(res){d.resolve(res)}).error(function(data){d.reject(data)}),d.promise}}}]),angular.module("collabjs.services").service("authService",["$http","$q",function($http,$q){"use strict";var _user=null;return{setCurrentUser:function(u){_user=u},getCurrentUser:function(){return _user},login:function(username,password){var deferred=$q.defer();return $http.post("/api/auth/login",{username:username,password:password}).success(function(res){_user=res,deferred.resolve(_user)}).error(function(){_user=!1,deferred.reject(null)}),deferred.promise},logout:function(){var deferred=$q.defer();return $http.post("/api/auth/logout",null).success(function(){_user=null,deferred.resolve(!0)}).error(function(){deferred.reject(null)}),deferred.promise}}}]),angular.module("collabjs.services").service("helpService",["$http","$q",function($http,$q){"use strict";return{getArticle:function(name){var d=$q.defer(),query=name?"/api/help/"+name:"/api/help";return $http.get(query).success(function(data){d.resolve(data)}),d.promise}}}]),angular.module("collabjs.services").service("menuService",["$q","authService",function($q,authService){"use strict";function isItemAllowed(itemRoles,userRoles){if(!itemRoles||0===itemRoles.length)return!0;if(!userRoles||0===userRoles.length)return!1;for(var i=0;i<itemRoles.length;i++)for(var k=0;k<userRoles.length;k++)if(userRoles[k]===itemRoles[i])return!0;return!1}var menuItems={};return{getMenuItems:function(){var d=$q.defer(),user=authService.getCurrentUser();if(!user)return d.resolve([]),d.promise;for(var item,names=Object.keys(menuItems),result=[],i=0;i<names.length;i++)item=menuItems[names[i]],item.roles&&item.roles.length>0?isItemAllowed(item.roles,user.roles)&&result.push(item):result.push(item);return d.resolve(result),d.promise},addMenuItems:function(items){for(var item,i=0;i<items.length;i++)item=items[i],item.id&&(menuItems[item.id]=item)}}}]),angular.module("collabjs.services").service("peopleService",["$http","$q",function($http,$q){"use strict";var _people=[];return{getPeople:function(){var deferred=$q.defer();return 0===_people.length?$http.get("/api/people").success(function(data){_people=data.feed||[],deferred.resolve(_people)}):deferred.resolve(_people),deferred.promise},getFollowing:function(account){var d=$q.defer(),query="/api/people/"+account+"/following";return $http.get(query).success(function(data){d.resolve(data)}),d.promise},getFollowers:function(account){var d=$q.defer(),query="/api/people/"+account+"/followers";return $http.get(query).success(function(data){d.resolve(data)}),d.promise},canFollow:function(profile){return profile&&!profile.isFollowed&&!profile.isOwnProfile},canUnfollow:function(profile){return profile&&profile.isFollowed&&!profile.isOwnProfile},getCountryName:function(profile){return profile&&profile.location?collabjs.countries[profile.location.toUpperCase()]:""},getProfileFeed:function(profile){return"string"==typeof profile?"/people/"+profile+"/timeline":profile&&profile.account?"/people/"+profile.account+"/timeline":null},getFollowingUrl:function(profile){return profile?"/#/people/"+profile.account+"/following":null},getFollowersUrl:function(profile){return profile?"/#/people/"+profile.account+"/followers":null},follow:function(profile){var followAction="/api/people/"+profile.account+"/follow";$http.get(followAction).success(function(){profile.isFollowed=!0})},unfollow:function(profile){var unfollowAction="/api/people/"+profile.account+"/unfollow";$http.get(unfollowAction).success(function(){profile.isFollowed=!1})}}}]),angular.module("collabjs.services").service("postsService",["$http","$q",function($http,$q){"use strict";return{getNews:function(topId){var d=$q.defer(),query="/api/timeline/posts";return topId&&(query=query+"?topId="+topId),$http.get(query).success(function(data){d.resolve(data||[])}),d.promise},getNewsUpdatesCount:function(topId){var d=$q.defer(),query="/api/timeline/updates/count?topId="+topId;return $http.get(query).success(function(data){d.resolve(data.posts||0)}).error(function(){d.resolve(0)}),d.promise},getNewsUpdates:function(topId){var d=$q.defer(),query="/api/timeline/updates?topId="+topId;return $http.get(query).success(function(data){d.resolve(data||[])}),d.promise},getWall:function(account,topId){var d=$q.defer(),query="/api/people/"+account+"/timeline";return topId&&(query=query+"?topId="+topId),$http.get(query).success(function(data){d.resolve(data)}).error(function(data){d.reject(data)}),d.promise},getMentions:function(topId){var d=$q.defer(),query="/api/mentions";return topId&&(query=query+"?topId="+topId),$http.get(query).success(function(data){d.resolve(data||[])}),d.promise},getPostById:function(postId){var d=$q.defer(),query="/api/timeline/posts/"+postId;return $http.get(query).success(function(res){d.resolve(res)}).error(function(data){d.reject(data)}),d.promise},getPostUrl:function(postId){return postId?"/timeline/posts/"+postId:null},getPostComments:function(postId){var d=$q.defer();return $http.get("/api/timeline/posts/"+postId+"/comments").success(function(data){d.resolve(data)}),d.promise},createPost:function(content){var d=$q.defer();return $http.post("/api/timeline/posts",{content:content}).then(function(res){d.resolve(res.data)}),d.promise},addComment:function(postId,content){var d=$q.defer();return $http.post("/api/timeline/comments",{postId:postId,content:content}).then(function(res){d.resolve(res.data)}),d.promise},deleteNewsPost:function(postId){var d=$q.defer();return $http.delete("/api/news/"+postId).then(function(res){d.resolve(res)}),d.promise},deleteWallPost:function(postId){var d=$q.defer();return $http.delete("/api/wall/"+postId).then(function(res){d.resolve(res)}),d.promise},loadPostComments:function(post,callback){post&&post.id&&$http.get("/api/timeline/posts/"+post.id+"/comments").success(function(data){post.comments=data||[],callback&&callback(post)})}}}]),angular.module("collabjs.services").service("profileService",[function(){"use strict";return{profilePictureUrl:function(){return collabjs.currentUser.pictureUrl}}}]),angular.module("collabjs.services").service("searchService",["$rootScope","$http","$q",function($rootScope,$http,$q){"use strict";return{getLists:function(){var d=$q.defer();return $http.get("/api/search/list").success(function(res){var lists=(res||[]).map(function(l){return l.url="/#/search?q="+l.q+"&src="+l.src,l});d.resolve(lists)}).error(function(data){d.reject(data)}),d.promise},saveList:function(q,src){var d=$q.defer(),query="/api/search?q="+encodeURIComponent(q)+"&src="+src;return $http.post(query,null).success(function(){d.resolve(!0),$rootScope.$broadcast("listSaved@searchService",{name:q,q:encodeURIComponent(q),src:src,url:"/#/search?q="+encodeURIComponent(q)+"&src="+src})}).error(function(err){d.resolve(err)}),d.promise},deleteList:function(q,src){var d=$q.defer(),query="/api/search?q="+encodeURIComponent(q)+"&src="+src;return $http.delete(query).success(function(){d.resolve(!0),$rootScope.$broadcast("listDeleted@searchService",{name:q,q:encodeURIComponent(q),src:src,url:"/#/search?q="+encodeURIComponent(q)+"&src="+src})}).error(function(err){d.resolve(err)}),d.promise},searchPosts:function(q,src,topId){var d=$q.defer(),query="/api/search?q="+encodeURIComponent(q)+"&src="+src;return topId&&(query=query+"&topId="+topId),$http.get(query).then(function(res){d.resolve(res.data||[])}),d.promise}}}]),angular.module("collabjs.directives").directive("menubar",["$location","$timeout",function($location,$timeout){"use strict";function mapLinks(element){var routePattern,link,url,i,links=element.find("a"),urlMap={};for($location.$$html5||(routePattern=/^\/#[^/]*/),i=0;i<links.length;i++)link=angular.element(links[i]),url=link.attr("href"),$location.$$html5?urlMap[url]=link.parent():urlMap[url.replace(routePattern,"")]=link.parent();return urlMap}return function(scope,element,attrs){function updateSelection(){element.find("li").removeClass(onClass);var urlMap=mapLinks(element),pathLink=urlMap[$location.path()]||urlMap[$location.url()];if(!pathLink&&subpaths){var path=$location.path(),parts=(0===path.indexOf("/")?path.substr(1):path).split("/");parts.length>0&&(pathLink=urlMap["/"+parts[0]])}pathLink&&(pathLink.addClass(onClass),"/search"===$location.path()&&pathLink.parents("li").addClass(onClass))}var onClass=attrs.menubar||"on",subpaths=attrs.subpaths||!1;scope.$on("$routeChangeSuccess",function(){updateSelection()}),$timeout(updateSelection,0)}}]),angular.module("collabjs.directives").directive("ngCardLayout",["$timeout",function($timeout){"use strict";return{restrict:"A",scope:{ngItems:"="},link:function(scope,element){function performLayout(){layout&&layout.wookmarkInstance&&layout.wookmarkInstance.clear(),layout=element.find("> ul > li"),layout.wookmark({autoResize:!0,container:element,offset:15,outerOffset:10})}var layout;scope.$watchCollection("ngItems",function(){$timeout(performLayout,0)})}}}]),angular.module("collabjs.directives").directive("onDocumentClick",["$document",function($document){"use strict";return{restrict:"A",link:function(scope,element,attrs){$document.on("click",function(){scope.$apply(function(){scope.$eval(attrs.onDocumentClick)})})}}}]),angular.module("collabjs.directives").directive("onOutsideElementClick",["$document",function($document){"use strict";return{restrict:"A",link:function(scope,element,attrs){element.bind("click",function(e){e.stopPropagation()}),$document.on("click",function(){scope.$apply(function(){scope.$eval(attrs.onOutsideElementClick)})})}}}]),angular.module("collabjs.directives").directive("sidebar",["$location","$timeout",function($location,$timeout){"use strict";function mapLinks(element){var routePattern,link,url,i,links=element.find("a"),urlMap={};for($location.$$html5||(routePattern=/^\/#[^/]*/),i=0;i<links.length;i++)link=angular.element(links[i]),url=link.attr("href"),$location.$$html5?urlMap[url]=link:urlMap[url.replace(routePattern,"")]=link;return urlMap}return function(scope,element,attrs){function updateSelection(){currentLink&&currentLink.removeClass(onClass);var urlMap=mapLinks(element),pathLink=urlMap[$location.path()]||urlMap[$location.url()];if(!pathLink&&subpaths){var path=$location.path(),parts=(0===path.indexOf("/")?path.substr(1):path).split("/");parts.length>0&&(pathLink=urlMap["/"+parts[0]])}pathLink&&(currentLink=pathLink,currentLink.addClass(onClass))}var currentLink,onClass=attrs.sidebar||"on",subpaths=attrs.subpaths||!1;scope.$on("$routeChangeSuccess",function(){updateSelection()}),$timeout(updateSelection,0)}}]),angular.module("collabjs.filters").filter("twitterize",["$sce",function($sce){"use strict";return function(input){return input&&input.length>0?$sce.trustAsHtml(input.twitterize()):null}}]),angular.module("collabjs.filters").filter("wallUrl",[function(){"use strict";return function(input){return"string"==typeof input?"/#/people/"+input:input&&input.account?"/#/people/"+input.account:null}}]),angular.module("collabjs.controllers").controller("AccountController",["$scope","$timeout","$http","accountService",function($scope,$timeout,$http,accountService){"use strict";function formatCountry(entry){return entry.id?'<i class="flag-icon-16 flag-'+entry.id.toLowerCase()+'"></i>'+entry.text:entry.text}function initUI(){$("#bio").countdown({limit:160,init:function(counter){$("#bio_counter").css("color","#999").text(counter)},plus:function(counter){$("#bio_counter").css("color","#999").text(counter),$("#submit").removeAttr("disabled")},minus:function(counter){$("#bio_counter").css("color","red").text(counter),$("#submit").attr("disabled","disabled")}})}$scope.error=!1,$scope.info=!1;var countryData=[];for(var key in collabjs.countries)collabjs.countries.hasOwnProperty(key)&&countryData.push({id:key,text:collabjs.countries[key]});$scope.countries=countryData,$scope.select2Options={placeholder:"Select a Country",allowClear:!0,formatResult:formatCountry,formatSelection:formatCountry},accountService.getAccount().then(function(account){$http.defaults.headers.common["x-csrf-token"]=account.token,$scope.avatarServer=account.avatarServer,$scope.pictureUrl=account.pictureUrl,$scope.name=account.name,$scope.location=account.location,$scope.website=account.website,$scope.bio=account.bio,$timeout(initUI)}),$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.submit=function(){var account={name:$scope.name,location:$scope.location,website:$scope.website,bio:$scope.bio};accountService.updateAccount(account).then(function(){$scope.info="Account settings have been successfully updated."})}}]),angular.module("collabjs.controllers").controller("AppController",["$scope","$http",function($scope,$http){"use strict";$scope.appName="collab.js",$scope.appConfig=collabjs.config,$scope.init=function(token){$http.defaults.headers.common["x-csrf-token"]=token}}]),angular.module("collabjs.controllers").controller("CardController",["$scope","$timeout","authService","postsService",function($scope,$timeout,authService,postsService){"use strict";function updateCardLayout(element){$timeout(function(){$(element).parents(".card").trigger("refreshWookmark")},0)}function deleteWallPost(post){post&&post.id&&postsService.deleteWallPost(post.id).then(function(){var toRemove=$scope.posts.filter(function(p){return p.id===post.id});if(toRemove.length>0){var i=$scope.posts.indexOf(toRemove[0]);i>-1&&($scope.posts.splice(i,1),$scope.hasNoPosts=0===$scope.posts.length)}})}function deleteNewsPost(post){post&&post.id&&postsService.deleteNewsPost(post.id).then(function(){var toRemove=$scope.posts.filter(function(p){return p.id===post.id});if(toRemove.length>0){var i=$scope.posts.indexOf(toRemove[0]);i>-1&&($scope.posts.splice(i,1),$scope.hasNoPosts=0===$scope.posts.length)}})}function getContextActions(post){var actions=[],currentUser=authService.getCurrentUser();if(!currentUser||!post||!post.account)return actions;var options=$scope.contextMenuOptions||{allowMute:!0};return currentUser.account===post.account?(actions.push({name:"Delete post",invoke:deleteWallPost}),actions.push({name:"(todo) Link to post",invoke:function(){}}),actions.push({name:"(todo) Disable comments",invoke:function(){}})):(options.allowMute&&actions.push({name:"Mute post",invoke:deleteNewsPost}),actions.push({name:"(todo) Link to post",invoke:function(){}}),actions.push({name:"(todo) Report spam or abuse",invoke:function(){}})),actions}$scope.commentsExpanded=!1,$scope.comment="",$scope.init=function(post){$scope.post=post,$scope.contextActions=getContextActions(post)},$scope.toggleComments=function($event){$scope.commentsExpanded?($scope.commentsExpanded=!1,updateCardLayout($event.currentTarget)):postsService.loadPostComments($scope.post,function(){$scope.commentsExpanded=!0,updateCardLayout($event.currentTarget)})},$scope.postComment=function($event){$scope.comment&&$scope.comment.length>0&&postsService.addComment($scope.post.id,$scope.comment).then(function(comment){var comments=$scope.post.comments||[];comments.push(comment),$scope.post.comments=comments,$scope.post.commentsCount++,$scope.comment=null,updateCardLayout($event.currentTarget)})}}]),angular.module("collabjs.controllers").controller("FollowersController",["$scope","$routeParams","peopleService",function($scope,$routeParams,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getFollowers($routeParams.account).then(function(data){$scope.profile=data.user,$scope.people=data.feed||[],$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("FollowingController",["$scope","$routeParams","peopleService",function($scope,$routeParams,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getFollowing($routeParams.account).then(function(data){$scope.profile=data.user,$scope.people=data.feed||[],$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("HelpController",["$scope","$routeParams","helpService","$sce",function($scope,$routeParams,helpService){"use strict";$scope.content=null,helpService.getArticle($routeParams.article).then(function(data){$scope.content=data})}]),angular.module("collabjs.controllers").controller("LoginController",["$scope","$location","authService",function($scope,$location,authService){"use strict";function reset(){$scope.username="",$scope.password=""}$scope.error=!1,$scope.username="",$scope.password="",$scope.login=function(){authService.login($scope.username,$scope.password).then(function(){reset(),$location.url("/news")},function(){reset(),$scope.error="Incorrect username or password"})},$scope.logout=function(){authService.logout().then(function(){$location.url("/login")})}}]),angular.module("collabjs.controllers").controller("MentionsController",["$scope","postsService",function($scope,postsService){"use strict";$scope.posts=[],$scope.hasNoPosts=!1,$scope.isLoadingMorePosts=!1,$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getMentions(bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}},postsService.getMentions().then(function(data){data.feed&&data.feed.length>0&&($scope.posts=data.feed),$scope.hasNoPosts=0===$scope.posts.length})}]),angular.module("collabjs.controllers").controller("MenuController",["$scope","authService","menuService","searchService",function($scope,authService,menuService,searchService){"use strict";$scope.visible=!1,$scope.searchLists=[],$scope.isAuthenticated=!1,$scope.items=[],$scope.$on("$routeChangeSuccess",function(){var user=authService.getCurrentUser();user?($scope.isAuthenticated=!0,$scope.userName=user.name,$scope.userPictureUrl=user.pictureUrl,$scope.userAccount=user.account,searchService.getLists().then(function(data){$scope.searchLists=data||[]}),menuService.getMenuItems().then(function(items){$scope.items=items||[]})):($scope.isAuthenticated=!1,$scope.userName=null)}),$scope.$on("listSaved@searchService",function(e,list){$scope.searchLists.push(list)}),$scope.$on("listDeleted@searchService",function(e,list){$scope.searchLists=$scope.searchLists.filter(function(element){return element.q!==list.q})})}]),angular.module("collabjs.controllers").controller("NewsController",["$scope","$timeout","postsService",function($scope,$timeout,postsService){"use strict";$scope.posts=[],$scope.canUpdateStatus=!0,$scope.hasNoPosts=!1,$scope.newPostsCount=0;var _updateChecker;$scope.loadNewPosts=function(){$timeout.cancel(_updateChecker);var topId=Math.max.apply(this,$.map($scope.posts,function(p){return p.id}));postsService.getNewsUpdates(topId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.newPostsCount=0,$scope.checkNewPosts()})},$scope.checkNewPosts=function(){$timeout.cancel(_updateChecker),_updateChecker=$timeout(function(){var topId=Math.max.apply(this,$.map($scope.posts,function(p){return p.id}));postsService.getNewsUpdatesCount(topId).then(function(count){$scope.newPostsCount=count,$scope.checkNewPosts()})},6e4)},$scope.isLoadingMorePosts=!1,$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getNews(bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}},postsService.getNews().then(function(data){$scope.posts=data,$scope.hasNoPosts=0===data.length}),$scope.checkNewPosts()}]),angular.module("collabjs.controllers").controller("PasswordController",["$scope","accountService",function($scope,accountService){"use strict";function clear(){$scope.pwdOld="",$scope.pwdNew="",$scope.pwdConfirm=""}$scope.pwdOld="",$scope.pwdNew="",$scope.pwdConfirm="",$scope.error=!1,$scope.info=!1,$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.submit=function(){var settings={pwdOld:$scope.pwdOld,pwdNew:$scope.pwdNew,pwdConfirm:$scope.pwdConfirm};accountService.changePassword(settings).then(function(){$scope.info="Password has been successfully changed.",clear()},function(err){$scope.error="Error: "+err,clear()})}}]),angular.module("collabjs.controllers").controller("PeopleListController",["$scope","peopleService",function($scope,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getPeople().then(function(data){$scope.people=data,$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("PostController",["$scope","$routeParams","postsService",function($scope,$routeParams,postsService){"use strict";$scope.postId=$routeParams.postId,$scope.posts=[],$scope.hasPost=!1,$scope.hasError=!1,$scope.error=null,postsService.getPostById($scope.postId).then(function(data){$scope.posts=[data],$scope.hasPost=$scope.posts.length>0},function(){$scope.error="Post not found.",$scope.hasError=!0}),$scope.loadMorePosts=function(){}}]),angular.module("collabjs.controllers").controller("RegistrationController",["$scope","$location","accountService",function($scope,$location,accountService){"use strict";$scope.error=!1,$scope.account="",$scope.name="",$scope.email="",$scope.password="",$scope.confirmPassword="",$scope.register=function(){accountService.createAccount($scope.name,$scope.email,$scope.password).then(function(){$location.path("/").replace()
},function(err){$scope.error=err,$scope.password="",$scope.confirmPassword=""})}}]),angular.module("collabjs.controllers").controller("SearchController",["$scope","$routeParams","searchService",function($scope,$routeParams,searchService){"use strict";$scope.error=!1,$scope.info=!1,$scope.query=$routeParams.q||null,$scope.source=$routeParams.src||"unknown",$scope.isSaved=null,$scope.hasNoPosts=null,$scope.posts=[],$scope.isLoadingMorePosts=!1,$scope.canWatch=function(){return null!==$scope.isSaved&&!$scope.isSaved&&!$scope.hasNoPosts},$scope.canUnwatch=function(){return $scope.isSaved},searchService.searchPosts($scope.query,$scope.source).then(function(data){$scope.isSaved=data.isSaved,$scope.posts=data.entries,$scope.hasNoPosts=0===$scope.posts.length}),$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.watch=function(){searchService.saveList($scope.query,$scope.source).then(function(){$scope.isSaved=!0,$scope.info="Search list was successfully saved."},function(err){$scope.error=err})},$scope.unwatch=function(){searchService.deleteList($scope.query,$scope.source).then(function(){$scope.isSaved=!1,$scope.info="Search list was successfully removed."},function(err){$scope.error=err})},$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=null;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),searchService.searchPosts($scope.searchQuery,$scope.searchSource,bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}}}]),angular.module("collabjs.controllers").controller("StatusController",["$scope","postsService",function($scope,postsService){"use strict";$scope.content=null,$scope.submit=function(){$scope.content&&$scope.content.length>0&&postsService.createPost($scope.content).then(function(post){$scope.content=null,$scope.posts.push(post)})}}]),angular.module("collabjs.controllers").controller("UserProfileController",["$scope","peopleService",function($scope,peopleService){"use strict";$scope.getCountryName=peopleService.getCountryName,$scope.canFollow=peopleService.canFollow,$scope.follow=peopleService.follow,$scope.canUnfollow=peopleService.canUnfollow,$scope.unfollow=peopleService.unfollow,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl}]),angular.module("collabjs.controllers").controller("WallController",["$scope","$routeParams","postsService",function($scope,$routeParams,postsService){"use strict";$scope.error=!1,$scope.account=$routeParams.account,$scope.posts=[],$scope.hasNoPosts=!1,$scope.isLoadingMorePosts=!1,$scope.contextMenuOptions={allowMute:!1},postsService.getWall($scope.account).then(function(data){$scope.profile=data.user,data.feed&&data.feed.length>0&&($scope.posts=data.feed,$scope.hasNoPosts=0===$scope.posts.length),$scope.hasNoPosts=0===$scope.posts.length},function(){$scope.error="THE RESOURCE YOU ARE LOOKING FOR HAS BEEN REMOVED, HAD ITS NAME CHANGED, OR IS TEMPORARILY UNAVAILABLE."}),$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getWall($scope.account,bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}}}]);
/*!
* collab.js v0.5.0-alpha
* Copyright (c) 2013-2014 Denis Vuyka
* License: MIT
* http://www.opensource.org/licenses/mit-license.php
*/
angular.module("collabjs.controllers").controller("AccountController",["$scope","$timeout","$http","accountService",function($scope,$timeout,$http,accountService){"use strict";function formatCountry(entry){return entry.id?'<i class="flag-icon-16 flag-'+entry.id.toLowerCase()+'"></i>'+entry.text:entry.text}function initUI(){$("#bio").countdown({limit:160,init:function(counter){$("#bio_counter").css("color","#999").text(counter)},plus:function(counter){$("#bio_counter").css("color","#999").text(counter),$("#submit").removeAttr("disabled")},minus:function(counter){$("#bio_counter").css("color","red").text(counter),$("#submit").attr("disabled","disabled")}})}$scope.error=!1,$scope.info=!1;var countryData=[];for(var key in collabjs.countries)collabjs.countries.hasOwnProperty(key)&&countryData.push({id:key,text:collabjs.countries[key]});$scope.countries=countryData,$scope.select2Options={placeholder:"Select a Country",allowClear:!0,formatResult:formatCountry,formatSelection:formatCountry},accountService.getAccount().then(function(account){$http.defaults.headers.common["x-csrf-token"]=account.token,$scope.avatarServer=account.avatarServer,$scope.pictureUrl=account.pictureUrl,$scope.name=account.name,$scope.location=account.location,$scope.website=account.website,$scope.bio=account.bio,$timeout(initUI)}),$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.submit=function(){var account={name:$scope.name,location:$scope.location,website:$scope.website,bio:$scope.bio};accountService.updateAccount(account).then(function(){$scope.info="Account settings have been successfully updated."})}}]),angular.module("collabjs.controllers").controller("AppController",["$scope","$http",function($scope,$http){"use strict";$scope.appName="collab.js",$scope.appConfig=collabjs.config,$scope.init=function(token){$http.defaults.headers.common["x-csrf-token"]=token}}]),angular.module("collabjs.controllers").controller("CardController",["$scope","$timeout","authService","postsService",function($scope,$timeout,authService,postsService){"use strict";function updateCardLayout(element){$timeout(function(){$(element).parents(".card").trigger("refreshWookmark")},0)}function deleteWallPost(post){post&&post.id&&postsService.deleteWallPost(post.id).then(function(){var toRemove=$scope.posts.filter(function(p){return p.id===post.id});if(toRemove.length>0){var i=$scope.posts.indexOf(toRemove[0]);i>-1&&($scope.posts.splice(i,1),$scope.hasNoPosts=0===$scope.posts.length)}})}function deleteNewsPost(post){post&&post.id&&postsService.deleteNewsPost(post.id).then(function(){var toRemove=$scope.posts.filter(function(p){return p.id===post.id});if(toRemove.length>0){var i=$scope.posts.indexOf(toRemove[0]);i>-1&&($scope.posts.splice(i,1),$scope.hasNoPosts=0===$scope.posts.length)}})}function getContextActions(post){var actions=[],currentUser=authService.getCurrentUser();if(!currentUser||!post||!post.account)return actions;var options=$scope.contextMenuOptions||{allowMute:!0};return currentUser.account===post.account?(actions.push({name:"Delete post",invoke:deleteWallPost}),actions.push({name:"(todo) Link to post",invoke:function(){}}),actions.push({name:"(todo) Disable comments",invoke:function(){}})):(options.allowMute&&actions.push({name:"Mute post",invoke:deleteNewsPost}),actions.push({name:"(todo) Link to post",invoke:function(){}}),actions.push({name:"(todo) Report spam or abuse",invoke:function(){}})),actions}$scope.commentsExpanded=!1,$scope.comment="",$scope.init=function(post){$scope.post=post,$scope.contextActions=getContextActions(post)},$scope.toggleComments=function($event){$scope.commentsExpanded?($scope.commentsExpanded=!1,updateCardLayout($event.currentTarget)):postsService.loadPostComments($scope.post,function(){$scope.commentsExpanded=!0,updateCardLayout($event.currentTarget)})},$scope.postComment=function($event){$scope.comment&&$scope.comment.length>0&&postsService.addComment($scope.post.id,$scope.comment).then(function(comment){var comments=$scope.post.comments||[];comments.push(comment),$scope.post.comments=comments,$scope.post.commentsCount++,$scope.comment=null,updateCardLayout($event.currentTarget)})}}]),angular.module("collabjs.controllers").controller("FollowersController",["$scope","$routeParams","peopleService",function($scope,$routeParams,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getFollowers($routeParams.account).then(function(data){$scope.profile=data.user,$scope.people=data.feed||[],$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("FollowingController",["$scope","$routeParams","peopleService",function($scope,$routeParams,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getFollowing($routeParams.account).then(function(data){$scope.profile=data.user,$scope.people=data.feed||[],$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("HelpController",["$scope","$routeParams","helpService","$sce",function($scope,$routeParams,helpService){"use strict";$scope.content=null,helpService.getArticle($routeParams.article).then(function(data){$scope.content=data})}]),angular.module("collabjs.controllers").controller("LoginController",["$scope","$location","authService",function($scope,$location,authService){"use strict";function reset(){$scope.username="",$scope.password=""}$scope.error=!1,$scope.username="",$scope.password="",$scope.login=function(){authService.login($scope.username,$scope.password).then(function(){reset(),$location.url("/news")},function(){reset(),$scope.error="Incorrect username or password"})},$scope.logout=function(){authService.logout().then(function(){$location.url("/login")})}}]),angular.module("collabjs.controllers").controller("MentionsController",["$scope","postsService",function($scope,postsService){"use strict";$scope.posts=[],$scope.hasNoPosts=!1,$scope.isLoadingMorePosts=!1,$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getMentions(bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}},postsService.getMentions().then(function(data){data.feed&&data.feed.length>0&&($scope.posts=data.feed),$scope.hasNoPosts=0===$scope.posts.length})}]),angular.module("collabjs.controllers").controller("MenuController",["$scope","authService","menuService","searchService",function($scope,authService,menuService,searchService){"use strict";$scope.visible=!1,$scope.searchLists=[],$scope.isAuthenticated=!1,$scope.items=[],$scope.$on("$routeChangeSuccess",function(){var user=authService.getCurrentUser();user?($scope.isAuthenticated=!0,$scope.userName=user.name,$scope.userPictureUrl=user.pictureUrl,$scope.userAccount=user.account,searchService.getLists().then(function(data){$scope.searchLists=data||[]}),menuService.getMenuItems().then(function(items){$scope.items=items||[]})):($scope.isAuthenticated=!1,$scope.userName=null)}),$scope.$on("listSaved@searchService",function(e,list){$scope.searchLists.push(list)}),$scope.$on("listDeleted@searchService",function(e,list){$scope.searchLists=$scope.searchLists.filter(function(element){return element.q!==list.q})})}]),angular.module("collabjs.controllers").controller("NewsController",["$scope","$timeout","postsService",function($scope,$timeout,postsService){"use strict";$scope.posts=[],$scope.canUpdateStatus=!0,$scope.hasNoPosts=!1,$scope.newPostsCount=0;var _updateChecker;$scope.loadNewPosts=function(){$timeout.cancel(_updateChecker);var topId=Math.max.apply(this,$.map($scope.posts,function(p){return p.id}));postsService.getNewsUpdates(topId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.newPostsCount=0,$scope.checkNewPosts()})},$scope.checkNewPosts=function(){$timeout.cancel(_updateChecker),_updateChecker=$timeout(function(){var topId=Math.max.apply(this,$.map($scope.posts,function(p){return p.id}));postsService.getNewsUpdatesCount(topId).then(function(count){$scope.newPostsCount=count,$scope.checkNewPosts()})},6e4)},$scope.isLoadingMorePosts=!1,$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getNews(bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}},postsService.getNews().then(function(data){$scope.posts=data,$scope.hasNoPosts=0===data.length}),$scope.checkNewPosts()}]),angular.module("collabjs.controllers").controller("PasswordController",["$scope","accountService",function($scope,accountService){"use strict";function clear(){$scope.pwdOld="",$scope.pwdNew="",$scope.pwdConfirm=""}$scope.pwdOld="",$scope.pwdNew="",$scope.pwdConfirm="",$scope.error=!1,$scope.info=!1,$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.submit=function(){var settings={pwdOld:$scope.pwdOld,pwdNew:$scope.pwdNew,pwdConfirm:$scope.pwdConfirm};accountService.changePassword(settings).then(function(){$scope.info="Password has been successfully changed.",clear()},function(err){$scope.error="Error: "+err,clear()})}}]),angular.module("collabjs.controllers").controller("PeopleListController",["$scope","peopleService",function($scope,peopleService){"use strict";$scope.people=[],$scope.hasNoPeople=!1,peopleService.getPeople().then(function(data){$scope.people=data,$scope.hasNoPeople=0===$scope.people.length}),$scope.canFollow=peopleService.canFollow,$scope.canUnfollow=peopleService.canUnfollow,$scope.getCountryName=peopleService.getCountryName,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl,$scope.follow=peopleService.follow,$scope.unfollow=peopleService.unfollow}]),angular.module("collabjs.controllers").controller("PostController",["$scope","$routeParams","postsService",function($scope,$routeParams,postsService){"use strict";$scope.postId=$routeParams.postId,$scope.posts=[],$scope.hasPost=!1,$scope.hasError=!1,$scope.error=null,postsService.getPostById($scope.postId).then(function(data){$scope.posts=[data],$scope.hasPost=$scope.posts.length>0},function(){$scope.error="Post not found.",$scope.hasError=!0}),$scope.loadMorePosts=function(){}}]),angular.module("collabjs.controllers").controller("RegistrationController",["$scope","$location","accountService",function($scope,$location,accountService){"use strict";$scope.error=!1,$scope.account="",$scope.name="",$scope.email="",$scope.password="",$scope.confirmPassword="",$scope.register=function(){accountService.createAccount($scope.name,$scope.email,$scope.password).then(function(){$location.path("/").replace()},function(err){$scope.error=err,$scope.password="",$scope.confirmPassword=""})}}]),angular.module("collabjs.controllers").controller("SearchController",["$scope","$routeParams","searchService",function($scope,$routeParams,searchService){"use strict";$scope.error=!1,$scope.info=!1,$scope.query=$routeParams.q||null,$scope.source=$routeParams.src||"unknown",$scope.isSaved=null,$scope.hasNoPosts=null,$scope.posts=[],$scope.isLoadingMorePosts=!1,$scope.canWatch=function(){return null!==$scope.isSaved&&!$scope.isSaved&&!$scope.hasNoPosts},$scope.canUnwatch=function(){return $scope.isSaved},searchService.searchPosts($scope.query,$scope.source).then(function(data){$scope.isSaved=data.isSaved,$scope.posts=data.entries,$scope.hasNoPosts=0===$scope.posts.length}),$scope.dismissError=function(){$scope.error=!1},$scope.dismissInfo=function(){$scope.info=!1},$scope.watch=function(){searchService.saveList($scope.query,$scope.source).then(function(){$scope.isSaved=!0,$scope.info="Search list was successfully saved."},function(err){$scope.error=err})},$scope.unwatch=function(){searchService.deleteList($scope.query,$scope.source).then(function(){$scope.isSaved=!1,$scope.info="Search list was successfully removed."},function(err){$scope.error=err})},$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=null;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),searchService.searchPosts($scope.searchQuery,$scope.searchSource,bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}}}]),angular.module("collabjs.controllers").controller("StatusController",["$scope","postsService",function($scope,postsService){"use strict";$scope.content=null,$scope.submit=function(){$scope.content&&$scope.content.length>0&&postsService.createPost($scope.content).then(function(post){$scope.content=null,$scope.posts.push(post)})}}]),angular.module("collabjs.controllers").controller("UserProfileController",["$scope","peopleService",function($scope,peopleService){"use strict";$scope.getCountryName=peopleService.getCountryName,$scope.canFollow=peopleService.canFollow,$scope.follow=peopleService.follow,$scope.canUnfollow=peopleService.canUnfollow,$scope.unfollow=peopleService.unfollow,$scope.getFollowingUrl=peopleService.getFollowingUrl,$scope.getFollowersUrl=peopleService.getFollowersUrl}]),angular.module("collabjs.controllers").controller("WallController",["$scope","$routeParams","postsService",function($scope,$routeParams,postsService){"use strict";$scope.error=!1,$scope.account=$routeParams.account,$scope.posts=[],$scope.hasNoPosts=!1,$scope.isLoadingMorePosts=!1,$scope.contextMenuOptions={allowMute:!1},postsService.getWall($scope.account).then(function(data){$scope.profile=data.user,data.feed&&data.feed.length>0&&($scope.posts=data.feed,$scope.hasNoPosts=0===$scope.posts.length),$scope.hasNoPosts=0===$scope.posts.length},function(){$scope.error="THE RESOURCE YOU ARE LOOKING FOR HAS BEEN REMOVED, HAD ITS NAME CHANGED, OR IS TEMPORARILY UNAVAILABLE."}),$scope.loadMorePosts=function(){if(!$scope.isLoadingMorePosts){$scope.isLoadingMorePosts=!0;var bottomPostId=0;$scope.posts.length>0&&(bottomPostId=Math.min.apply(this,$.map($scope.posts,function(p){return p.id}))),postsService.getWall($scope.account,bottomPostId).then(function(data){$scope.posts.push.apply($scope.posts,data||[]),$scope.isLoadingMorePosts=!1,$scope.hasNoPosts=0===$scope.posts.length})}}}]);